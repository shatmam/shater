#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import time
import requests
import random
import subprocess
import signal
from datetime import datetime
from concurrent.futures import ThreadPoolExecutor

# ---------------------- CONFIGURACI√ìN ----------------------

INTERVALO_MINUTOS = 60
INTERVALO_SEGUNDOS = INTERVALO_MINUTOS * 60

USER_AGENTS = [
    "Mozilla/5.0 (Linux; Android 10; SM-A102U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0 Mobile Safari/537.36",
    "Dalvik/2.1.0 (Linux; U; Android 10; SM-A102U Build/QP1A.190711.020)",
    "Mozilla/5.0 (Linux; Android 11; SM-A305FN) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0 Mobile Safari/537.36",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 15_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.2 Mobile/15E148 Safari/604.1",
    "okhttp/4.9.1",
    "com.claro.app/5.0.1 (Android 11; SM-A305FN)"
]

ACT_FILE = [
    "erp.claro.com.do", 
    "bloqueo2.claro.com.do", 
    "miclaroempresas.claro.com.do",
    "airg.com",
    "clarovr.com",
    "assets.portal.shop",
    "apk.ctn.smapps.mx",
    "apk.ctn.smapps.mx:9852",
    "omicron.banreservas.com:5443",
    "instagram.com",
    "fbcdn.net",
    "cdninstagram.com",
    "appcentral.claro.com.do",
    "prepagoenlinea2.claro.com.do",
    "mivoz.claro.com.do",
    "miclaroapp.claro.com.do",
    "api.mi.claro.com.do"
]

# üõ°Ô∏è Telegram bot config
BOT_TOKEN = "6084150102:AAHJdwv-W5Qnxm5SFecyzFHK26DJwiVspsg"
ADMIN_ID = "1350075155"
URL_HWID_AUTORIZADOS = "hhttps://pastebin.com/raw/VRuSk2bn"  # Archivo JSON con HWIDs

# Colores
RED = '\033[0;31m'
GREEN = '\033[0;32m'
YELLOW = '\033[1;33m'
BLUE = '\033[0;34m'
NC = '\033[0m'

# ---------------------- FUNCIONES DE HWID Y TELEGRAM ----------------------

def obtener_hwid():
    import uuid
    return str(uuid.getnode())

HWID = obtener_hwid()

def verificar_autorizacion():
    mensaje = f"üîê Solicitud de acceso:\nHWID: {HWID}"
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": ADMIN_ID,
        "text": mensaje,
        "parse_mode": "Markdown"
    }
    try:
        r = requests.post(url, data=data)
        r.raise_for_status()
        print(f"{YELLOW}üîÑ Esperando autorizaci√≥n del administrador...{NC}")
    except Exception as e:
        print(f"{RED}üö´ No se pudo contactar con el bot: {e}{NC}")
        os._exit(0)

def esta_autorizado():
    try:
        r = requests.get(URL_HWID_AUTORIZADOS)
        r.raise_for_status()
        lista = r.json().get("hwids", [])
        return HWID in lista
    except Exception as e:
        print(f"{RED}üö´ Error al verificar autorizaci√≥n: {e}{NC}")
        return False

# ---------------------- FUNCIONES PRINCIPALES ----------------------

def salir_graciosamente(signum=None, frame=None):
    print(f"\n{BLUE}[üö®] Todos los procesos fueron detenidos...{NC}\n")
    os._exit(0)

signal.signal(signal.SIGINT, salir_graciosamente)
signal.signal(signal.SIGTERM, salir_graciosamente)

def tiene_internet():
    return subprocess.call(['curl', '-X', 'HEAD', '-s', '-k', '--max-time', '5', 'https://www.cloudflare.com'],
                           stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL) == 0

def ACTIVAR_INTERNET():
    inicio = time.time()
    if tiene_internet():
        duracion = time.time() - inicio
        print(f"{GREEN}üü¢ Ya tienes internet. ({duracion:.2f}s){NC}")
        return

    print(f"\n{BLUE}üöÄ Activando internet...{NC}")
    UA = random.choice(USER_AGENTS)
    HDR = {"User-Agent": UA, "X-Requested-With": "com.claro.app"}

    def probar_url(url_base):
        for proto in ['http://', 'https://']:
            if tiene_internet():
                return True
            try:
                requests.head(proto + url_base, headers=HDR, timeout=5, verify=False)
            except:
                pass
        return False

    for ronda in range(10):
        if tiene_internet():
            duracion = time.time() - inicio
            print(f"{GREEN}üü¢ Ya tienes internet. ({duracion:.2f}s){NC}")
            return
